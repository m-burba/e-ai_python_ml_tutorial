data:
  format: zarr
  frequency: 6h
  timestep: 6h
  forcing:
  - cos_latitude
  - cos_longitude
  - sin_latitude
  - sin_longitude
  - cos_julian_day
  - cos_local_time
  - sin_julian_day
  - sin_local_time
  - insolation
  - lsm
  - sdor
  - slor
  - z
  diagnostic:
  - tp
  - cp
  remapped: null
  normalizer:
    default: mean-std
    std:
    - tp
    min-max: null
    max:
    - sdor
    - slor
    - z
    none:
    - cos_latitude
    - cos_longitude
    - sin_latitude
    - sin_longitude
    - cos_julian_day
    - cos_local_time
    - sin_julian_day
    - sin_local_time
    - insolation
    - lsm
  imputer:
    default: none
  remapper:
    default: none
  processors:
    normalizer:
      _target_: anemoi.models.preprocessing.normalizer.InputNormalizer
      config: ${data.normalizer}
  num_features: null
dataloader:
  prefetch_factor: 2
  pin_memory: true
  read_group_size: ${hardware.num_gpus_per_model}
  num_workers:
    training: 8
    validation: 8
    test: 8
  batch_size:
    training: 2
    validation: 4
    test: 4
  limit_batches:
    training: 100
    validation: 100
    test: 20
  grid_indices:
    _target_: anemoi.training.data.grid_indices.FullGrid
    nodes_name: ${graph.data}
  dataset: ${hardware.paths.data}/${hardware.files.dataset}
  training:
    dataset: ${dataloader.dataset}
    start: null
    end: 2020
    frequency: ${data.frequency}
    drop: []
  validation_rollout: 1
  validation:
    dataset: ${dataloader.dataset}
    start: 2021
    end: 2021
    frequency: ${data.frequency}
    drop: []
  test:
    dataset: ${dataloader.dataset}
    start: 2022
    end: null
    frequency: ${data.frequency}
    drop: []
datamodule:
  _target_: anemoi.training.data.datamodule.AnemoiDatasetsDataModule
diagnostics:
  plot:
    asynchronous: true
    datashader: true
    frequency:
      batch: 750
      epoch: 5
    parameters:
    - z_500
    - t_850
    - u_850
    - v_850
    - 2t
    - 10u
    - 10v
    - sp
    - tp
    - cp
    sample_idx: 0
    precip_and_related_fields:
    - tp
    - cp
    colormaps:
      default:
        _target_: anemoi.training.utils.custom_colormaps.MatplotlibColormap
        name: viridis
      error:
        _target_: anemoi.training.utils.custom_colormaps.MatplotlibColormap
        name: bwr
      precip:
        _target_: anemoi.training.utils.custom_colormaps.MatplotlibColormapClevels
        clevels:
        - '#ffffff'
        - '#04e9e7'
        - '#019ff4'
        - '#0300f4'
        - '#02fd02'
        - '#01c501'
        - '#008e00'
        - '#fdf802'
        - '#e5bc00'
        - '#fd9500'
        - '#fd0000'
        - '#d40000'
        - '#bc0000'
        - '#f800fd'
        variables: ${diagnostics.plot.precip_and_related_fields}
    callbacks: []
  callbacks: []
  benchmark_profiler:
    memory:
      enabled: true
      steps: 5
      warmup: 2
      extra_plots: false
      trace_rank0_only: false
    time:
      enabled: true
      verbose: false
    speed:
      enabled: true
    system:
      enabled: true
    model_summary:
      enabled: true
    snapshot:
      enabled: true
      steps: 4
      warmup: 0
  debug:
    anomaly_detection: false
  profiler: false
  enable_checkpointing: true
  checkpoint:
    every_n_minutes:
      save_frequency: 30
      num_models_saved: 3
    every_n_epochs:
      save_frequency: 1
      num_models_saved: -1
    every_n_train_steps:
      save_frequency: null
      num_models_saved: 0
  log:
    wandb:
      enabled: false
      offline: false
      log_model: false
      project: Anemoi
      entity: ???
      gradients: false
      parameters: false
    tensorboard:
      enabled: false
    mlflow:
      enabled: false
      offline: false
      authentication: false
      log_model: false
      tracking_uri: ???
      experiment_name: anemoi-debug
      project_name: Anemoi
      system: true
      terminal: true
      run_name: null
      on_resume_create_child: true
      expand_hyperparams:
      - config
      http_max_retries: 35
    interval: 100
  enable_progress_bar: true
  print_memory_summary: false
hardware:
  paths:
    data: ???
    output: ???
    truncation: null
    logs:
      base: ${hardware.paths.output}logs/
      wandb: ${hardware.paths.logs.base}
      mlflow: ${hardware.paths.logs.base}mlflow/
      tensorboard: ${hardware.paths.logs.base}tensorboard/
    checkpoints: ${hardware.paths.output}checkpoint/
    plots: ${hardware.paths.output}plots/
    profiler: ${hardware.paths.output}profiler/
    graph: ${hardware.paths.output}graphs/
  files:
    dataset: ???
    graph: ???
    truncation: null
    truncation_inv: null
    checkpoint:
      every_n_epochs: anemoi-by_epoch-epoch_{epoch:03d}-step_{step:06d}
      every_n_train_steps: anemoi-by_step-epoch_{epoch:03d}-step_{step:06d}
      every_n_minutes: anemoi-by_time-epoch_{epoch:03d}-step_{step:06d}
    warm_start: null
  accelerator: auto
  num_gpus_per_node: 1
  num_nodes: 1
  num_gpus_per_model: 1
graph:
  overwrite: true
  data: data
  hidden: hidden
  nodes:
    data:
      node_builder:
        _target_: anemoi.graphs.nodes.ZarrDatasetNodes
        dataset: ${dataloader.dataset}
      attributes: ${graph.attributes.nodes}
    hidden:
      node_builder:
        _target_: anemoi.graphs.nodes.TriNodes
        resolution: 5
      attributes: ${graph.attributes.nodes}
  edges:
  - source_name: ${graph.data}
    target_name: ${graph.hidden}
    edge_builders:
    - _target_: anemoi.graphs.edges.CutOffEdges
      cutoff_factor: 0.6
      source_mask_attr_name: null
      target_mask_attr_name: null
    attributes: ${graph.attributes.edges}
  - source_name: ${graph.hidden}
    target_name: ${graph.hidden}
    edge_builders:
    - _target_: anemoi.graphs.edges.MultiScaleEdges
      x_hops: 1
      source_mask_attr_name: null
      target_mask_attr_name: null
    attributes: ${graph.attributes.edges}
  - source_name: ${graph.hidden}
    target_name: ${graph.data}
    edge_builders:
    - _target_: anemoi.graphs.edges.KNNEdges
      num_nearest_neighbours: 3
      source_mask_attr_name: null
      target_mask_attr_name: null
    attributes: ${graph.attributes.edges}
  attributes:
    nodes:
      area_weight:
        _target_: anemoi.graphs.nodes.attributes.SphericalAreaWeights
        norm: unit-max
        fill_value: 0
    edges:
      edge_length:
        _target_: anemoi.graphs.edges.attributes.EdgeLength
        norm: unit-std
      edge_dirs:
        _target_: anemoi.graphs.edges.attributes.EdgeDirection
        norm: unit-std
  post_processors: []
model:
  activation: GELU
  num_channels: 128
  cpu_offload: false
  output_mask: null
  model:
    _target_: anemoi.models.models.encoder_processor_decoder.AnemoiModelEncProcDec
  layer_kernels:
    processor:
      LayerNorm:
        _target_: anemoi.models.layers.normalization.AutocastLayerNorm
        _partial_: true
      Linear:
        _target_: torch.nn.Linear
        _partial_: true
    encoder:
      LayerNorm:
        _target_: anemoi.models.layers.normalization.AutocastLayerNorm
        _partial_: true
      Linear:
        _target_: torch.nn.Linear
        _partial_: true
    decoder:
      LayerNorm:
        _target_: anemoi.models.layers.normalization.AutocastLayerNorm
        _partial_: true
      Linear:
        _target_: torch.nn.Linear
        _partial_: true
  processor:
    _target_: anemoi.models.layers.processor.GNNProcessor
    activation: ${model.activation}
    trainable_size: ${model.trainable_parameters.hidden2hidden}
    sub_graph_edge_attributes: ${model.attributes.edges}
    num_layers: 16
    num_chunks: 2
    mlp_extra_layers: 0
    cpu_offload: ${model.cpu_offload}
  encoder:
    _target_: anemoi.models.layers.mapper.GNNForwardMapper
    trainable_size: ${model.trainable_parameters.data2hidden}
    sub_graph_edge_attributes: ${model.attributes.edges}
    activation: ${model.activation}
    num_chunks: 1
    mlp_extra_layers: 0
    cpu_offload: ${model.cpu_offload}
  decoder:
    _target_: anemoi.models.layers.mapper.GNNBackwardMapper
    trainable_size: ${model.trainable_parameters.hidden2data}
    sub_graph_edge_attributes: ${model.attributes.edges}
    activation: ${model.activation}
    num_chunks: 1
    mlp_extra_layers: 0
    cpu_offload: ${model.cpu_offload}
  trainable_parameters:
    data: 8
    hidden: 8
    data2hidden: 8
    hidden2data: 8
    hidden2hidden: 8
  attributes:
    edges:
    - edge_length
    - edge_dirs
    nodes: []
  bounding:
  - _target_: anemoi.models.layers.bounding.ReluBounding
    variables:
    - tp
training:
  run_id: null
  fork_run_id: null
  transfer_learning: false
  load_weights_only: false
  deterministic: false
  precision: 16-mixed
  multistep_input: 2
  accum_grad_batches: 1
  num_sanity_val_steps: 6
  gradient_clip:
    val: 32.0
    algorithm: value
  swa:
    enabled: false
    lr: 0.0001
  optimizer:
    zero: false
    kwargs:
      betas:
      - 0.9
      - 0.95
  model_task: anemoi.training.train.forecaster.GraphForecaster
  strategy:
    _target_: anemoi.training.distributed.strategy.DDPGroupStrategy
    num_gpus_per_model: ${hardware.num_gpus_per_model}
    read_group_size: ${dataloader.read_group_size}
  loss_gradient_scaling: false
  training_loss:
    _target_: anemoi.training.losses.mse.WeightedMSELoss
    scalars:
    - variable
    - loss_weights_mask
    ignore_nans: false
  validation_metrics:
  - _target_: anemoi.training.losses.mse.WeightedMSELoss
    scalars: []
    ignore_nans: true
  scale_validation_metrics:
    scalars_to_apply:
    - variable
    metrics:
    - all
  rollout:
    start: 1
    epoch_increment: 0
    max: 1
  max_epochs: 5
  max_steps: 150000
  lr:
    warmup: 1000
    rate: 6.25e-05
    iterations: ${training.max_steps}
    min: 3.0e-07
  variable_loss_scaling:
    default: 1
    pl:
      q: 0.6
      t: 6
      u: 0.8
      v: 0.5
      w: 0.001
      z: 12
    sfc:
      sp: 10
      10u: 0.1
      10v: 0.1
      2d: 0.5
      tp: 0.025
      cp: 0.0025
  metrics:
  - z_500
  - t_850
  - u_850
  - v_850
  pressure_level_scaler:
    _target_: anemoi.training.data.scaling.ReluPressureLevelScaler
    minimum: 0.2
    slope: 0.001
  node_loss_weights:
    _target_: anemoi.training.losses.nodeweights.GraphNodeAttribute
    target_nodes: ${graph.data}
    node_attribute: area_weight
  submodules_to_freeze: []
config_validation: true
